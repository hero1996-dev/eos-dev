#%RAML 1.0
title: Emanate Colaboration Contract
baseUri: https://emanate.dev.decentrawise.com/
version: v1
description: |
  Available users are user11, user12, user13, user14, user15, user21, user22, user23, user23, user25.
protocols: [HTTP]

/authenticate:
    description: "Create a new auth token"
    post:
        description: "Create a new auth token"
        body:
            application/json:
                example: | 
                    {
                        user: <user>,
                        password: <password>
                    }
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "success": true,
                                "data": { token: <token> }
                            }

/collab:
    description: "Propose a collaboration contract to one or several users"
    post:
        description: "Propose a collaboration contract to one or several users"
        body:
            application/json:
                example: | 
                    {
                        parameters: {
                            "proposal_name": "contract1",           //  name of the contract
                            "price": 10000,                         //  price per second
                            "fileHash": "result_hash",              //  the result file hash of the collaboration
                            "requested": [                          //  needs at least one parner
                                {
                                    "name": "user11",               //  name of the collaboration partner account
                                    "percentage": 70,               //  percentage of the royalties for this partner
                                    "fileHash": "file_hash",        //  filename needed for this collaboration
                                    "accepted": 0                   //  Should be ignored but must exist for now
                                },
                                {
                                    "name": "user12",               //  name of the collaboration partner account
                                    "percentage": 30,               //  percentage of the royalties for this partner
                                    "fileHash": "file_hash",        //  filename needed for this collaboration
                                    "accepted": 0                   //  Should be ignored but must exist for now
                                }
                            ]
                        }
                    }
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "success": true,
                                "data": { <the inserted contract> }
                            }
                            otherwise
                            {
                                "success": false,
                                "message": "the error message goes here"
                            }
              
/collab/:contract/:userName:
    description: "Cancel a proposal"
    delete:
        description: "Cancel a proposal"
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "success": true,
                                "data": { <the canceled contract> }
                            }
                            otherwise
                            {
                                "success": false,
                                "message": "the error message goes here"
                            }

/collab/:contract/:userName/:hash:
    description: "Update the result IPFS hash on a collaboration contract"
    put:
        description: "Update the result IPFS hash on a collaboration contract"
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "success": true,
                                "data": { <the updated contract> }
                            }
                            otherwise
                            {
                                "success": false,
                                "message": "the error message goes here"
                            }

       
/collab/:contract/accept/:userName:
    description: "Accept a contract proposal"
    put:
        description: "Accept a contract proposal"
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "success": true,
                                "data": { <the updated contract> }
                            }
                            otherwise
                            {
                                "success": false,
                                "message": "the error message goes here"
                            }

                            
                            
/collab/:contract/reject/:userName:
    description: "Reject a contract proposal"
    put:
        description: "Reject a contract proposal"
        body:
            application/json:
                example: | 
                    {
                        parameters: {
                            "proposer": "user11",           //  Creator of the proposal
                            "proposal_name": "contract1",   //  Name of the proposal
                        }
                    }
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "success": true,
                                "data": { <the updated contract> }
                            }
                            otherwise
                            {
                                "success": false,
                                "message": "the error message goes here"
                            }

   

/collab:
    description: "Get all contract details"
    get:
        description: "Get all contract details"
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "success": true,
                                "data": { <all available contracts for this user> }
                            }
                            otherwise
                            {
                                "success": false,
                                "message": "the error message goes here"
                            }

/user/:username/collab/:contract:
    description: "Get contract details"
    get:
        description: "Get contract details"
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "success": true,
                                "data": { <the requested contract> }
                            }
                            otherwise
                            {
                                "success": false,
                                "message": "the error message goes here"
                            }


/user/:username/asset:
    description: "Add a new asset for a user"
    post:
        description: "Add a new asset for a user"
        body:
            multipart/form-data:
                properties:
                    asset:
                        description: The asset buffer to be uploaded
                    metadata:
                        description: The metadata for this asset. All properties are arbitrary, so use them as you wish.
                        example: | 
                        {  
                            "title": "This is asset 1",
                            "artistName": "Look, I'm an artist...",
                        }                        
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "success": true,
                                "data": { <the inserted asset with updated metadata> }
                            }
                            otherwise
                            {
                                "success": false,
                                "message": "the error message goes here"
                            }
                            

/user/:username/asset:
    description: "Removes a track for a specific user"
    delete:
        description: "Removes a track for a specific user"
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "success": true,
                                "data": { <the deleted asset> }
                            }
                            otherwise
                            {
                                "success": false,
                                "message": "the error message goes here"
                            }


/user/:username/asset:
    description: "Get all assets for this user"
    get:
        description: "Get all assets for this user"
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "success": true,
                                "data": [{ <asset> }, ...]
                            }
                            otherwise
                            {
                                "success": false,
                                "message": "the error message goes here"
                            }

/user/:username/asset:
    description: "Get an asset for this user"
    get:
        description: "Get an asset for this user"
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "success": true,
                                "data": { <asset> }
                            }
                            otherwise
                            {
                                "success": false,
                                "message": "the error message goes here"
                            }

/user/:username/asset/statistics/:hash:
    description: "Get asset statistics"
    get:
        description: "Get asset statistics"
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "success": true,
                                "data": { <asset statistics> }
                            }
                            otherwise
                            {
                                "success": false,
                                "message": "the error message goes here"
                            }


/user/:username/asset/play/:assetOwner/:hash:
    description: "Call this method to make all transactions refering to a 'play' event"
    put:
        description: "This will execute the collaboration contract and update the statistics. The user balances will be updated."
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "success": true,
                                "data": {  }
                            }
                            otherwise
                            {
                                "success": false,
                                "message": "the error message goes here"
                            }

/user/:username:
    description: "Get user specific data"
    get:
        description: "User data is the balance and the username. More data will become available soon."
        responses:
            200:
                body:
                    application/json:
                        example: |
                            {
                                "success": true,
                                "data": { <user data> }
                            }
                            otherwise
                            {
                                "success": false,
                                "message": "the error message goes here"
                            }
